{"version":3,"file":"index.iife.min.js","sources":["../../../node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js","../../../node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js","../../../node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/_assert.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/crypto.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/_sha2.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/sha512.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/utils.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/modular.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/curve.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/edwards.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/montgomery.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/hash-to-curve.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/ed25519.js","../src/utils/ed25519.ts","../src/utils/to-buffer.ts","../../../node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js","../../../node_modules/.pnpm/safe-buffer@5.2.1/node_modules/safe-buffer/index.js","../../../node_modules/.pnpm/base-x@3.0.9/node_modules/base-x/src/index.js","../../../node_modules/.pnpm/bs58@4.0.1/node_modules/bs58/index.js","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/esm/_assert.js","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/esm/_sha2.js","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/.pnpm/text-encoding-utf-8@1.0.2/node_modules/text-encoding-utf-8/lib/encoding.lib.js","../../../node_modules/.pnpm/borsh@0.7.0/node_modules/borsh/lib/index.js","../src/utils/borsh-schema.ts","../src/publickey.ts","../src/account.ts","../src/bpf-loader-deprecated.ts","../../../node_modules/.pnpm/@solana+buffer-layout@4.0.0/node_modules/@solana/buffer-layout/lib/Layout.js","../src/transaction/constants.ts","../src/transaction/expiry-custom-errors.ts","../src/message/account-keys.ts","../src/layout.ts","../src/utils/shortvec-encoding.ts","../src/utils/assert.ts","../src/message/compiled-keys.ts","../src/message/legacy.ts","../src/message/v0.ts","../src/message/versioned.ts","../src/transaction/legacy.ts","../src/transaction/message.ts","../src/transaction/versioned.ts","../src/timing.ts","../src/sysvar.ts","../src/utils/send-and-confirm-transaction.ts","../src/utils/sleep.ts","../src/instruction.ts","../src/fee-calculator.ts","../src/nonce-account.ts","../../../node_modules/.pnpm/bigint-buffer@1.1.5/node_modules/bigint-buffer/dist/browser.js","../src/utils/bigint.ts","../src/programs/system.ts","../src/loader.ts","../src/bpf-loader.ts","../../../node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","../../../node_modules/.pnpm/superstruct@0.14.2/node_modules/superstruct/lib/index.es.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v1.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/parse.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v35.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/md5.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v3.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/sha1.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v5.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/nil.js","../../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/version.js","../../../node_modules/.pnpm/jayson@4.1.0/node_modules/jayson/lib/generateRequest.js","../../../node_modules/.pnpm/jayson@4.1.0/node_modules/jayson/lib/client/browser/index.js","../src/epoch-schedule.ts","../src/errors.ts","../src/__forks__/browser/fetch-impl.ts","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/typeof.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/regenerator/index.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/classCallCheck.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/toPrimitive.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/toPropertyKey.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/createClass.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/inherits.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../../../node_modules/.pnpm/@babel+runtime@7.22.6/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../../../node_modules/.pnpm/eventemitter3@4.0.7/node_modules/eventemitter3/index.js","../../../node_modules/.pnpm/rpc-websockets@7.5.1/node_modules/rpc-websockets/dist/lib/client.js","../../../node_modules/.pnpm/rpc-websockets@7.5.1/node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../src/rpc-websocket.ts","../src/account-data.ts","../src/programs/address-lookup-table/state.ts","../src/utils/makeWebsocketUrl.ts","../src/connection.ts","../src/keypair.ts","../src/programs/address-lookup-table/index.ts","../src/programs/compute-budget.ts","../src/programs/ed25519.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/.pnpm/@noble+hashes@1.3.1/node_modules/@noble/hashes/esm/sha3.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/abstract/weierstrass.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/esm/hmac.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/_shortw_utils.js","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/esm/secp256k1.js","../src/utils/secp256k1.ts","../src/programs/secp256k1.ts","../src/programs/stake.ts","../src/programs/vote.ts","../src/validator-info.ts","../src/vote-account.ts","../src/utils/cluster.ts","../src/utils/send-and-confirm-raw-transaction.ts","../src/index.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// Caching slows it down 2-3x\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    if (hex.length % 2)\n        throw new Error('hex string is invalid: unpadded ' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// Big Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport const numberToBytesBE = (n, len) => hexToBytes(n.toString(16).padStart(len * 2, '0'));\nexport const numberToBytesLE = (n, len) => numberToBytesBE(n, len).reverse();\n// Returns variable number bytes (minimal bigint encoding?)\nexport const numberToVarBytesBE = (n) => hexToBytes(numberToHexUnpadded(n));\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n// Copies several Uint8Arrays into one.\nexport function concatBytes(...arrs) {\n    const r = new Uint8Array(arrs.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrs.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexport function equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\n// Bit operations\n// Amount of bits inside bigint (Same as n.toString(2).length)\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n// Gets single bit at position. NOTE: first bit position is 0 (same as arrays)\n// Same as !!+Array.from(n.toString(2)).reverse()[pos]\nexport const bitGet = (n, pos) => (n >> BigInt(pos)) & _1n;\n// Sets single bit at position\nexport const bitSet = (n, pos, value) => n | ((value ? _1n : _0n) << BigInt(pos));\n// Return mask for N bits (Same as BigInt(`0b${Array(i).fill('1').join('')}`))\n// Not using ** operator with bigints for old engines.\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently exponentiate num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * powMod(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Eucledian GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n// 0 is non-invertible: non-batched version will throw on 0\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being neglible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @returns valid private scalar\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n ** BigInt(nByteLength * 8);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // if x=0 and x_0 = 1, fail\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { mod, pow } from './modular.js';\nimport { bytesToNumberLE, ensureBytes, numberToBytesLE, validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction validateOpts(curve) {\n    validateObject(curve, {\n        a: 'bigint',\n    }, {\n        montgomeryBits: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        powPminus2: 'function',\n        Gu: 'bigint',\n    });\n    // Set defaults\n    return Object.freeze({ ...curve });\n}\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nexport function montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P } = CURVE;\n    const modP = (n) => mod(n, P);\n    const montgomeryBits = CURVE.montgomeryBits;\n    const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n    const fieldLen = CURVE.nByteLength;\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes);\n    const powPminus2 = CURVE.powPminus2 || ((x) => pow(x, P - BigInt(2), P));\n    // cswap from RFC7748. But it is not from RFC7748!\n    /*\n      cswap(swap, x_2, x_3):\n           dummy = mask(swap) AND (x_2 XOR x_3)\n           x_2 = x_2 XOR dummy\n           x_3 = x_3 XOR dummy\n           Return (x_2, x_3)\n    Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n     and x_3, computed, e.g., as mask(swap) = 0 - swap.\n    */\n    function cswap(swap, x_2, x_3) {\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy);\n        x_3 = modP(x_3 + dummy);\n        return [x_2, x_3];\n    }\n    // Accepts 0 as well\n    function assertFieldElement(n) {\n        if (typeof n === 'bigint' && _0n <= n && n < P)\n            return n;\n        throw new Error('Expected valid scalar 0 < scalar < CURVE.P');\n    }\n    // x25519 from 4\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n    const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n    /**\n     *\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(pointU, scalar) {\n        const u = assertFieldElement(pointU);\n        // Section 5: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.\n        const k = assertFieldElement(scalar);\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        let sw;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            sw = cswap(swap, x_2, x_3);\n            x_2 = sw[0];\n            x_3 = sw[1];\n            sw = cswap(swap, z_2, z_3);\n            z_2 = sw[0];\n            z_3 = sw[1];\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        // (x_2, x_3) = cswap(swap, x_2, x_3)\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        // (z_2, z_3) = cswap(swap, z_2, z_3)\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        // z_2^(p - 2)\n        const z2 = powPminus2(z_2);\n        // Return x_2 * (z_2^(p - 2))\n        return modP(x_2 * z2);\n    }\n    function encodeUCoordinate(u) {\n        return numberToBytesLE(modP(u), montgomeryBytes);\n    }\n    function decodeUCoordinate(uEnc) {\n        // Section 5: When receiving such an array, implementations of X25519\n        // MUST mask the most significant bit in the final byte.\n        // This is very ugly way, but it works because fieldLen-1 is outside of bounds for X448, so this becomes NOOP\n        // fieldLen - scalaryBytes = 1 for X448 and = 0 for X25519\n        const u = ensureBytes('u coordinate', uEnc, montgomeryBytes);\n        // u[fieldLen-1] crashes QuickJS (TypeError: out-of-bound numeric index)\n        if (fieldLen === montgomeryBytes)\n            u[fieldLen - 1] &= 127; // 0b0111_1111\n        return bytesToNumberLE(u);\n    }\n    function decodeScalar(n) {\n        const bytes = ensureBytes('scalar', n);\n        if (bytes.length !== montgomeryBytes && bytes.length !== fieldLen)\n            throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${bytes.length}`);\n        return bytesToNumberLE(adjustScalarBytes(bytes));\n    }\n    function scalarMult(scalar, u) {\n        const pointU = decodeUCoordinate(u);\n        const _scalar = decodeScalar(scalar);\n        const pu = montgomeryLadder(pointU, _scalar);\n        // The result was not contributory\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    const GuBytes = encodeUCoordinate(CURVE.Gu);\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    return {\n        scalarMult,\n        scalarMultBase,\n        getSharedSecret: (privateKey, publicKey) => scalarMult(privateKey, publicKey),\n        getPublicKey: (privateKey) => scalarMultBase(privateKey),\n        utils: { randomPrivateKey: () => CURVE.randomBytes(CURVE.nByteLength) },\n        GuBytes: GuBytes,\n    };\n}\n//# sourceMappingURL=montgomery.js.map","import { mod } from './modular.js';\nimport { bytesToNumberBE, concatBytes, utf8ToBytes, validateObject } from './utils.js';\nfunction validateDST(dst) {\n    if (dst instanceof Uint8Array)\n        return dst;\n    if (typeof dst === 'string')\n        return utf8ToBytes(dst);\n    throw new Error('DST must be Uint8Array or string');\n}\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    if (value < 0 || value >= 1 << (8 * length)) {\n        throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n    }\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction isBytes(item) {\n    if (!(item instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n}\nfunction isNum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nexport function expand_message_xmd(msg, DST, lenInBytes, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n    if (DST.length > 255)\n        DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (ell > 255)\n        throw new Error('Invalid xmd length');\n    const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H(concatBytes(...args));\n    }\n    const pseudo_random_bytes = concatBytes(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\nexport function expand_message_xof(msg, DST, lenInBytes, k, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg, count, options) {\n    validateObject(options, {\n        DST: 'string',\n        p: 'bigint',\n        m: 'isSafeInteger',\n        k: 'isSafeInteger',\n        hash: 'hash',\n    });\n    const { p, k, m, hash, expand, DST: _DST } = options;\n    isBytes(msg);\n    isNum(count);\n    const DST = validateDST(_DST);\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = mod(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nexport function isogenyMap(field, map) {\n    // Make same order as in spec\n    const COEFF = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        x = field.div(xNum, xDen); // xNum / xDen\n        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n        return { x, y };\n    };\n}\nexport function createHasher(Point, mapToCurve, def) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    return {\n        // Encodes byte string to elliptic curve\n        // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n        hashToCurve(msg, options) {\n            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });\n            const u0 = Point.fromAffine(mapToCurve(u[0]));\n            const u1 = Point.fromAffine(mapToCurve(u[1]));\n            const P = u0.add(u1).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n        encodeToCurve(msg, options) {\n            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });\n            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n    };\n}\n//# sourceMappingURL=hash-to-curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { mod, pow2, isNegativeLE, Field, FpSqrtEven } from './abstract/modular.js';\nimport { equalBytes, bytesToHex, bytesToNumberLE, numberToBytesLE, ensureBytes, } from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1),\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n ** 255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n ** 252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = twistedEdwards({ ...ed25519Defaults, domain: ed25519_domain });\nexport const ed25519ph = twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255,\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n});\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const aPub = ed25519.getPublicKey(utils.randomPrivateKey());\n *   x25519.getSharedSecret(edwardsToMontgomery(aPub), edwardsToMontgomery(someonesPub))\n */\nexport function edwardsToMontgomery(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((y - _1n) * Fp.inv(y + _1n)));\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) = map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst { hashToCurve, encodeToCurve } = htf.createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n});\nexport { hashToCurve, encodeToCurve };\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistrettoPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistrettoPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-bit hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-bit output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ed25519.ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ed25519.ExtendedPoint.ZERO);\nexport { RistrettoPoint };\n// https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/14/\n// Appendix B.  Hashing to ristretto255\nexport const hash_to_ristretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = htf.expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistrettoPoint.hashToCurve(uniform_bytes);\n    return P;\n};\n//# sourceMappingURL=ed25519.js.map","import {ed25519} from '@noble/curves/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n//# sourceMappingURL=_assert.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {Message} from './legacy';\nimport {MessageV0} from './v0';\n\nexport type VersionedMessage = Message | MessageV0;\n// eslint-disable-next-line no-redeclare\nexport const VersionedMessage = {\n  deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n\n  deserialize: (serializedMessage: Uint8Array): VersionedMessage => {\n    const version =\n      VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(\n        `Transaction message version ${version} deserialization is not supported`,\n      );\n    }\n  },\n};\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower',\n      } as Intl.CollatorOptions;\n      return x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {AccountKeysFromLookups} from '../message/account-keys';\nimport assert from '../utils/assert';\nimport {toBuffer} from '../utils/to-buffer';\nimport {Blockhash} from '../blockhash';\nimport {Message, MessageV0, VersionedMessage} from '../message';\nimport {PublicKey} from '../publickey';\nimport {AddressLookupTableAccount} from '../programs';\nimport {AccountMeta, TransactionInstruction} from './legacy';\n\nexport type TransactionMessageArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\nexport type DecompileArgs =\n  | {\n      accountKeysFromLookups: AccountKeysFromLookups;\n    }\n  | {\n      addressLookupTableAccounts: AddressLookupTableAccount[];\n    };\n\nexport class TransactionMessage {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n\n  constructor(args: TransactionMessageArgs) {\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n\n  static decompile(\n    message: VersionedMessage,\n    args?: DecompileArgs,\n  ): TransactionMessage {\n    const {header, compiledInstructions, recentBlockhash} = message;\n\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts,\n    } = header;\n\n    const numWritableSignedAccounts =\n      numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n\n    const numWritableUnsignedAccounts =\n      message.staticAccountKeys.length -\n      numRequiredSignatures -\n      numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error(\n        'Failed to decompile message because no account keys were found',\n      );\n    }\n\n    const instructions: TransactionInstruction[] = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys: AccountMeta[] = [];\n\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(\n            `Failed to find key for account key index ${keyIndex}`,\n          );\n        }\n\n        const isSigner = keyIndex < numRequiredSignatures;\n\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable =\n            keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable =\n            keyIndex - accountKeys.staticAccountKeys.length <\n            // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n            accountKeys.accountKeysFromLookups!.writable.length;\n        }\n\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable,\n        });\n      }\n\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(\n          `Failed to find program id for program id index ${compiledIx.programIdIndex}`,\n        );\n      }\n\n      instructions.push(\n        new TransactionInstruction({\n          programId,\n          data: toBuffer(compiledIx.data),\n          keys,\n        }),\n      );\n    }\n\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash,\n    });\n  }\n\n  compileToLegacyMessage(): Message {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n    });\n  }\n\n  compileToV0Message(\n    addressLookupTableAccounts?: AddressLookupTableAccount[],\n  ): MessageV0 {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {MS_PER_SLOT} from './timing';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(\n        transaction,\n        [payer, program],\n        {preflightCommitment: deployCommitment},\n      );\n      const {context, value} = await connection.confirmTransaction(\n        {\n          signature: finalizeSignature,\n          lastValidBlockHeight: transaction.lastValidBlockHeight!,\n          blockhash: transaction.recentBlockhash!,\n        },\n        deployCommitment,\n      );\n      if (value.err) {\n        throw new Error(\n          `Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`,\n        );\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (\n        true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment,\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve =>\n          setTimeout(resolve, Math.round(MS_PER_SLOT / 2)),\n        );\n      }\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  (typeof SolanaJSONRPCErrorCode)[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","import RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport RpcWebSocketBrowserFactory from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport {\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n} from 'rpc-websockets/dist/lib/client/client.types';\n\nimport createRpc from './rpc-websocket-factory';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends RpcWebSocketCommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = (\n          rpc as ReturnType<typeof RpcWebSocketBrowserFactory>\n        ).socket;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<RpcWebSocketCommonClient['call']>\n  ): ReturnType<RpcWebSocketCommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<RpcWebSocketCommonClient['notify']>\n  ): ReturnType<RpcWebSocketCommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\nexport type IsBlockhashValidConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type RecentPrioritizationFees = {\n  /** slot in which the fee was observed */\n  slot: number;\n  /** the per-compute-unit fee paid by at least one successfully landed transaction, specified in increments of 0.000001 lamports*/\n  prioritizationFee: number;\n};\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\nexport type GetRecentPrioritizationFeesConfig = {\n  /**\n   * If this parameter is provided, the response will reflect a fee to land a transaction locking\n   * all of the provided accounts as writable.\n   */\n  lockedWritableAccounts?: PublicKey[];\n};\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(\n  pick({\n    slot: number(),\n    prioritizationFee: number(),\n  }),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(\n  GetRecentPrioritizationFeesResult,\n);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** wrap the result in an RpcResponse JSON object */\n  withContext?: boolean;\n};\n\nexport type GetProgramAccountsResponse = readonly Readonly<{\n  account: AccountInfo<Buffer>;\n  /** the account Pubkey as base-58 encoded string */\n  pubkey: PublicKey;\n}>[];\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment: GetProgramAccountsConfig &\n      Readonly<{withContext: true}>,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<GetProgramAccountsResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<\n    | GetProgramAccountsResponse\n    | RpcResponseAndContext<GetProgramAccountsResponse>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res =\n      configWithoutEncoding.withContext === true\n        ? create(unsafeRes, jsonRpcResultAndContext(baseSchema))\n        : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(\n    config?: GetRecentPrioritizationFeesConfig,\n  ): Promise<RecentPrioritizationFees[]> {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPrioritizationFees',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent prioritization fees',\n      );\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(\n    blockhash: Blockhash,\n    rawConfig?: IsBlockhashValidConfig,\n  ): Promise<RpcResponseAndContext<boolean>> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs(\n      [blockhash],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to determine if the blockhash `' + blockhash + '`is valid',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  getBlockHeight = (() => {\n    const requestPromises: {[hash: string]: Promise<number>} = {};\n    return async (\n      commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n    ): Promise<number> => {\n      const {commitment, config} =\n        extractCommitmentFromConfig(commitmentOrConfig);\n      const args = this._buildArgs(\n        [],\n        commitment,\n        undefined /* encoding */,\n        config,\n      );\n      const requestHash = fastStableStringify(args);\n      requestPromises[requestHash] =\n        requestPromises[requestHash] ??\n        (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(\n                res.error,\n                'failed to get block height information',\n              );\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n      return await requestPromises[requestHash];\n    };\n  })();\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((c, point, isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            // Zero is valid point too!\n            if (this.is0()) {\n                if (CURVE.allowInfinityPoint)\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size (nBitLength+64)\n         * as per FIPS 186 B.4.1 with modulo bias being neglible.\n         */\n        randomPrivateKey: () => {\n            const rand = CURVE.randomBytes(Fp.BYTES + 8);\n            const num = mod.hashToPrivateScalar(rand, CURVE_ORDER);\n            return ut.numberToBytesBE(num, CURVE.nByteLength);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash (not message: you need to hash it by yourself).\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param opts `lowS, extraEntropy, prehash`\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const drbg = ut.createHmacDrbg(CURVE.hash.outputLen, CURVE.nByteLength, CURVE.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n// Implementation of the Shallue and van de Woestijne method for any Weierstrass curve\n// TODO: check if there is a way to merge this with uvRatio in Edwards && move to modular?\n// b = True and y = sqrt(u / v) if (u / v) is square in F, and\n// b = False and y = sqrt(Z * (u / v)) otherwise.\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    const c2 = (q - _1n) / _2n ** c1; // 2. c2 = (q - 1) / (2^c1)        # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n ** c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n ** (c1 - _1n); // 5. c5 = 2^(c1 - 1)              # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = _2n ** (i - _2n); // 18.    tv5 = i - 2;    19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n// From draft-irtf-cfrg-hash-to-curve-16\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = {\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n};\nconst isoMap = htf.isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j))));\nconst mapSWU = mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n});\nexport const { hashToCurve, encodeToCurve } = htf.createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n});\n//# sourceMappingURL=secp256k1.js.map","import {secp256k1} from '@noble/curves/secp256k1';\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.sign>[0],\n  privKey: Parameters<typeof secp256k1.sign>[1],\n) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery!] as const;\n};\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   *\n   * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","import type {Buffer} from 'buffer';\n\nimport {\n  BlockheightBasedTransactionConfirmationStrategy,\n  Connection,\n  DurableNonceTransactionConfirmationStrategy,\n  TransactionConfirmationStrategy,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: TransactionConfirmationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | TransactionConfirmationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy: TransactionConfirmationStrategy | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'nonceValue',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as DurableNonceTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n"],"names":["base64Js","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","ieee754","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","proto","foo","Object","setPrototypeOf","prototype","defineProperty","enumerable","get","isBuffer","this","undefined","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","slice","fromArrayLike","array","arrayView","copy","obj","numberIsNaN","type","isArray","data","toString","_isBuffer","compare","a","x","y","min","String","toLowerCase","concat","list","pos","set","call","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","BigInt","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","NodeError","constructor","super","writable","configurable","name","stack","message","range","input","msg","received","isInteger","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","split","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","number","isSafeInteger","bool","lengths","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","assert","assert$5","crypto","globalThis","createView","DataView","rotr","word","shift","Uint32Array","v","padStart","TextEncoder","encode","toBytes","concatBytes","arrays","every","reduce","result","pad","Hash$1","Hash","clone","_cloneInto","wrapConstructor","hashConstructor","hashC","update","digest","randomBytes","bytesLength","getRandomValues","setBigUint64","view","_32n","_u32_max","wh","wl","h","l","setUint32","SHA2","padOffset","take","dataView","process","roundClean","digestInto","oview","outLen","state","destroy","to","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","u64$4","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","sha512","_0n","_1n","_2n","u8a","hexes","bytesToHex","hex","numberToHexUnpadded","hexToNumber","hexToBytes","hexByte","byte","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","numberToVarBytesBE","ensureBytes","title","expectedLength","arrs","r","sum","forEach","equalBytes","b1","b2","bitLen","bitGet","bitSet","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","k","reset","reseed","seed","gen","sl","genUntil","pred","validatorFns","bigint","function","boolean","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","entries","_3n","_4n","_5n","_8n","mod","power","modulo","pow2","invert","u","q","gcd","tonelliShanks","P","legendreC","Q","S","Z","p1div4","tonelliFast","root","eql","sqr","Q1div2","tonelliSlow","neg","ONE","g","ZERO","t2","ge","FpSqrt","sqrt3mod4","c1","sqrt5mod8","n2","nv","isNegativeLE","FIELD_FIELDS","validateField","initial","ORDER","MASK","BYTES","BITS","opts","FpPow","f","p","FpInvertBatch","nums","lastMultiplied","acc","is0","inverted","inv","reduceRight","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","redef","sqrtP","freeze","isOdd","lhs","rhs","div","sqrN","addN","subN","mulN","sqrt","invertBatch","cmov","fromBytes","FpSqrtEven","elm","hashToPrivateScalar","groupOrder","minLen","wNAF","bits","constTimeNegate","condition","item","negate","W","windows","windowSize","unsafeLadder","double","precomputeWindow","points","base","window","precomputes","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","validateOpts","ut.validateObject","adjustScalarBytes","domain","uvRatio","mapToCurve","twistedEdwards","curveDef","CURVE","CURVE_ORDER","prehash","cHash","cofactor","modP","ctx","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","Map","isPoint","other","Point","ex","ey","ez","et","toAffine","static","toInv","fromAffine","_setWindowSize","delete","assertValidity","X","Y","T","X2","Y2","Z2","Z4","aX2","left","right","XY","ZT","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","wnaf","normalizeZ","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","z","ax","ay","zz","clearCofactor","normed","lastByte","ut.bytesToNumberLE","y2","isXOdd","isLastByteOdd","privKey","getExtendedPublicKey","point","toRawBytes","ut.numberToBytesLE","toHex","ut.bytesToHex","modN","modN_LE","key","hashed","head","prefix","pointBytes","getPublicKey","hashDomainToScalar","context","msgs","ut.concatBytes","sign","options","R","verifyOpts","verify","sig","publicKey","SB","fromHex","RkA","utils","randomPrivateKey","precompute","ExtendedPoint","montgomeryBits","powPminus2","Gu","montgomery","montgomeryBytes","fieldLen","cswap","x_2","x_3","dummy","assertFieldElement","a24","montgomeryLadder","pointU","x_1","z_2","z_3","sw","t","k_t","AA","BB","DA","CB","dacb","da_cb","z2","encodeUCoordinate","decodeUCoordinate","uEnc","decodeScalar","scalarMult","_scalar","pu","GuBytes","scalarMultBase","getSharedSecret","privateKey","validateDST","os2ip","i2osp","strxor","isBytes","isNum","expand_message_xmd","DST","lenInBytes","b_in_bytes","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","args","pseudo_random_bytes","expand_message_xof","dkLen","hash_to_field","count","expand","_DST","log2p","L","len_in_bytes","prb","elm_offset","tv","isogenyMap","COEFF","xNum","xDen","yNum","yDen","createHasher","def","hashToCurve","u0","u1","encodeToCurve","encodeDST","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","x2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","ed25519_domain","ELL2_C1","ELL2_C2","ELL2_C3","ELL2_C4","ELL2_J","map_to_curve_elligator2_curve25519","tv1","xd","x1n","tv2","gxd","gx1","tv3","y11","y12","e1","y1","x2n","y21","y22","gx2","e2","e3","xn","e4","xMn","xMd","yMn","yMd","ELL2_C1_EDWARDS","map_to_curve_elligator2_edwards25519","yn","yd","htf.createHasher","scalars","assertRstPoint","RistrettoPoint","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","invertSqrt","MAX_255B","bytes255ToNumberLE","calcElligatorRistrettoMap","r0","Ns","Ns_D_is_sq","s_","Nt","s2","W0","W1","W2","W3","ep","ap","r1","R1","r2","R2","emsg","u2","u1_2","u2_2","Dx","Dy","u2sq","invsqrt","D1","D2","zInv","_x","_y","one","two","generatePrivateKey","generateKeypair","privateScalar","secretKey","isOnCurve","_unused","toBuffer","module","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","words","red","_init","wordSize","cmp","init","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","off","_strip","parseHex4Bits","index","parseHexByte","lowerBound","parseLength","parseBase","limbLen","limbPow","total","imuln","_iaddn","dest","move","_move","_expand","strip","_normSign","for","zeros","groupSizes","groupBases","padding","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","toArrayLike","allocate","ArrayType","reqLength","postfix","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","toBitArray","bit","wbit","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","smallMulTo","self","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","b3","bl3","bh3","bl4","bh4","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","isqr","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","isEven","yp","xp","im","jm","_invmp","x1","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","ireduce","rlen","imulK","K256","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","nOne","lpow","wnd","current","currentLen","mont","Mont","rinv","minv","copyProps","SafeBuffer","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","source","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","basex","bs58","assert$3","u32","hashCons","wrapXOFConstructorWithOpts","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","sigma1","sigma0","SHA224","sha256","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","unshift","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextDecoder$1","UTF8Decoder","input_stream","handler","_encoder","_options","TextEncoder$1","opt_string","UTF8Encoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","temp","encoding_lib","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserializeUnchecked_1","deserializeUnchecked","deserialize_1","deserialize","serialize_1","serialize","BinaryWriter","BorshError","baseDecode","bn_js_1","bs58_1","require$$2","ResolvedTextDecoder","textDecoder","baseEncode","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","splice","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","kind","serializeStruct","borshSerialize","structSchema","fields","idx","values","Writer","deserializeField","reader","option","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","Struct","properties","_classCallCheck","assign","_createClass","SOLANA_SCHEMA","decodeUnchecked","Enum","_Struct","_inherits","_super","_createSuper","_this","keys","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","_Symbol$toStringTag","toStringTag","PublicKey","decoded","toBase58","zeroPad","unique","_createWithSeed","_asyncToGenerator","_regeneratorRuntime","mark","_callee","fromPublicKey","programId","publicKeyBytes","wrap","_callee$","_context","abrupt","stop","createWithSeed","_x2","_x3","createProgramAddressSync","seeds","_createProgramAddress","_callee2","_callee2$","_context2","createProgramAddress","_x4","_x5","findProgramAddressSync","nonce","address","seedsWithNonce","err","_findProgramAddress","_callee3","_callee3$","_context3","findProgramAddress","_x6","_x7","pubkeyData","pubkey","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","Layout_1","Layout$1","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u24","u16","u8","greedy","Constant","UTF8","Blob","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","constant","cstr","blob","unionLayoutDiscriminator","union","seq","struct","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","span","property","makeDestinationObject","getSpan","replicate","rv","fromArray","bindConstructorLayout","Class","layout","layout_","boundConstructor_","isCount","elementSpan","rem","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearInt64","FloatBE","elementLayout","elo","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","u48","u24be","s8","s48be","f64be","utf8","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","_Error","signature","_wrapNativeSuper","TransactionExpiredTimeoutError","_Error2","_super2","timeoutSeconds","_this2","toFixed","TransactionExpiredNonceInvalidError","_Error3","_super3","_this3","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","_iterator","_createForOfIteratorHelper","_step","done","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","authorized","lockup","voteInit","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","assert$1","CompiledKeys","payer","keyMetaMap","getMessageComponents","mapEntries","_toConsumableArray","writableSigners","filter","_ref","_ref2","_slicedToArray","isSigner","isWritable","readonlySigners","_ref3","_ref4","writableNonSigners","_ref5","_ref6","readonlyNonSigners","_ref7","_ref8","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","_writableSigners$","payerAddress","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","extractTableLookup","lookupTable","_this$drainKeysFoundI","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","_this$drainKeysFoundI2","writableIndexes","drainedWritableKeys","_this$drainKeysFoundI3","_this$drainKeysFoundI4","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","_loop","_step$value","lookupTableIndex","findIndex","entry","compile","getOrInsertDefault","payerKeyMeta","_iterator2","_step2","ix","_iterator3","_step3","accountMeta","Message","accountKeys","recentBlockhash","indexToProgramIds","account","accounts","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","has","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","transaction","signData","compiledKeys","payerKey","_compiledKeys$getMess","_compiledKeys$getMess2","accountCount","dataSlice","messageArgs","MessageV0","compiledInstructions","addressTableLookups","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","_iterator4","_step4","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","_iterator5","_step5","encodedAccountKeyIndexesLength","encodedDataLength","_iterator6","_step6","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","lookupTableAccounts","_iterator7","_step7","extractResult","_accountKeysFromLooku","_accountKeysFromLooku2","_extractResult","addressTableLookup","_extractResult$","maskedPrefix","version","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","_len","items","_key","compileMessage","JSON","stringify","warn","accountMetas","_objectSpread","uniqueMetas","pubkeyString","uniqueIndex","sort","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","_uniqueMetas$splice","_uniqueMetas$splice2","payerMeta","signedKeys","unsignedKeys","invariant","_compile","valid","pair","serializeMessage","_getEstimatedFee","connection","getFeeForMessage","sent","getEstimatedFee","setSigners","_len2","_key2","seen","Set","_len3","_key3","uniqueSigners","_i","_signers","signer","_partialSign","partialSign","_len4","_key4","_i2","_signers2","_len5","_key5","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","_step2$value","config","_Object$assign","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","TransactionMessage","compileToLegacyMessage","compileToV0Message","decompile","compiledIx","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","messageData","signerPubkeys","signerIndex","signaturesLength","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","_sendAndConfirmTransaction","sendOptions","status","nonceAccountPubkey","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","abortSignal","nonceValue","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","browser","toBigIntLE","reversed","toBigIntLE_1","toBigIntBE","browser$1","toBufferLE","toBufferLE_1","toBufferBE","encodeDecode","bigInt","_encodeDecode","bigIntLayout","SystemInstruction","decodeInstructionType","checkProgramId","instructionTypeLayout","typeIndex","_Object$entries","SYSTEM_INSTRUCTION_LAYOUTS","_Object$entries$_i","ixType","decodeCreateAccount","checkKeyLength","_decodeData","Create","lamports","space","fromPubkey","newAccountPubkey","decodeTransfer","_decodeData2","Transfer","toPubkey","decodeTransferWithSeed","_decodeData3","TransferWithSeed","basePubkey","decodeAllocate","_decodeData4","Allocate","accountPubkey","decodeAllocateWithSeed","_decodeData5","AllocateWithSeed","decodeAssign","_decodeData6","Assign","decodeAssignWithSeed","_decodeData7","AssignWithSeed","decodeCreateWithSeed","_decodeData8","CreateWithSeed","decodeNonceInitialize","_decodeData9","InitializeNonceAccount","noncePubkey","decodeNonceAdvance","AdvanceNonceAccount","decodeNonceWithdraw","_decodeData10","WithdrawNonceAccount","decodeNonceAuthorize","_decodeData11","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","UpgradeNonceAccount","createAccount","params","transfer","createAccountWithSeed","createNonceAccount","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","CHUNK_SIZE","Loader","getMinNumSignatures","chunkSize","_load","program","balanceNeeded","programInfo","dataLayout","transactions","_data","_transaction","REQUESTS_PER_SECOND","_dataLayout","_data2","_transaction2","deployCommitment","finalizeSignature","_yield$connection$con","currentSlot","getMinimumBalanceForRentExemption","getAccountInfo","executable","owner","bytesLengthPadding","_rpcEndpoint","all","getSlot","slot","t0","round","load","BPF_LOADER_PROGRAM_ID","BpfLoader","elf","loaderProgramId","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify","returnVal","StructError","failure","failures","cached","rest","path","_cached","isIterable","isObject","iterator","print","shiftIterator","toFailure","branch","refinement","toFailures","run","coerce","coercer","validator","ts","refiner","props","is","validate","tuples","tuple","define","any","Element","literal","description","never","nullable","optional","record","Key","Value","Elements","Never","Structs","unknown","rnds8","rng","msCrypto","REGEX","uuid","test","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","parse","stringToBytes","unescape","encodeURIComponent","DNS","URL","v35","hashfunc","generateUUID","namespace","md5","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","lsw","msw","bitRotateLeft","cnt","md5cmn","v3$1","v4","rnds","ROTL","sha1","K","N","M","_t","_t2","v5","v5$1","nil","generateRequest","method","id","request","jsonrpc","generator","notificationIdNull","generateRequest_1","ClientBrowser","callServer","reviver","replacer","callback","isBatch","isRaw","hasCallback","response","_parseResponse","responseText","isError","isNotError","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","customMessage","fetch","_interopRequireDefault","_typeof","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","reject","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","_sent","dispatchException","methodName","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","__proto__","awrap","async","iter","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","runtime","regenerator","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","_next","_throw","Constructor","_toPrimitive","prim","_toPropertyKey","toPropertyKey","_defineProperties","descriptor","protoProps","staticProps","_setPrototypeOf","subClass","superClass","_assertThisInitialized","ReferenceError","assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","on","removeAllListeners","prefixed","_regenerator","_asyncToGenerator2","_typeof2","require$$3","_classCallCheck2","require$$4","_createClass2","require$$5","_inherits2","require$$6","_possibleConstructorReturn2","require$$7","_getPrototypeOf2","require$$8","_eventemitter","require$$9","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","construct","sham","Proxy","__rest","propertyIsEnumerable","CommonClient","_EventEmitter","webSocketFactory","_a","generate_request_id","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","connect","socket","timeout","ws_opts","send","promise","_login","resp","login","_listMethods","listMethods","notify","_subscribe","subscribe","_unsubscribe","_callee4","_callee4$","_context4","unsubscribe","close","_this4","clearTimeout","addEventListener","notification","reason","_default","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","cb","RpcWebSocketClient","_RpcWebSocketCommonCl","url","rpc","createRpc","underlyingSocket","_this$underlyingSocke","readyState","_get2","_get","_this$underlyingSocke2","_get3","RpcWebSocketCommonClient","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","_BufferLayout$struct$","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","_matches","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","_objectWithoutProperties","_excluded","createRpcResult","pick","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","fetchImpl","agent","fetchWithMiddleware","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","too_many_requests_retries","waitTime","text","body","headers","COMMON_HTTP_HEADERS","statusText","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","_process$env$npm_pack","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_requestPromises$requ","_extractCommitmentFro","requestHash","_buildArgs","unsafeRes","wsEndpoint","confirmTransactionInitialTimeout","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_getBalanceAndContext","_callee5","_extractCommitmentFro2","_callee5$","_context5","getBalanceAndContext","_getBalance","_callee6","_callee6$","_context6","getBalance","_x8","_x9","_getBlockTime","_callee7","_callee7$","_context7","getBlockTime","_x10","_getMinimumLedgerSlot","_callee8","_callee8$","_context8","getMinimumLedgerSlot","_getFirstAvailableBlock","_callee9","_callee9$","_context9","getFirstAvailableBlock","_getSupply","_callee10","configArg","_callee10$","_context10","getSupply","_x11","_getTokenSupply","_callee11","tokenMintAddress","_callee11$","_context11","getTokenSupply","_x12","_x13","_getTokenAccountBalance","_callee12","tokenAddress","_callee12$","_context12","getTokenAccountBalance","_x14","_x15","_getTokenAccountsByOwner","_callee13","ownerAddress","_extractCommitmentFro3","_args","_callee13$","_context13","getTokenAccountsByOwner","_x16","_x17","_x18","_getParsedTokenAccountsByOwner","_callee14","_callee14$","_context14","getParsedTokenAccountsByOwner","_x19","_x20","_x21","_getLargestAccounts","_callee15","_callee15$","_context15","getLargestAccounts","_x22","_getTokenLargestAccounts","_callee16","mintAddress","_callee16$","_context16","getTokenLargestAccounts","_x23","_x24","_getAccountInfoAndContext","_callee17","_extractCommitmentFro4","_callee17$","_context17","getAccountInfoAndContext","_x25","_x26","_getParsedAccountInfo","_callee18","_extractCommitmentFro5","_callee18$","_context18","getParsedAccountInfo","_x27","_x28","_getAccountInfo","_callee19","_callee19$","_context19","_x29","_x30","_getMultipleParsedAccounts","_callee20","publicKeys","rawConfig","_extractCommitmentFro6","_callee20$","_context20","getMultipleParsedAccounts","_x31","_x32","_getMultipleAccountsInfoAndContext","_callee21","_extractCommitmentFro7","_callee21$","_context21","getMultipleAccountsInfoAndContext","_x33","_x34","_getMultipleAccountsInfo","_callee22","_callee22$","_context22","getMultipleAccountsInfo","_x35","_x36","_getStakeActivation","_callee23","_extractCommitmentFro8","_callee23$","_context23","getStakeActivation","_x37","_x38","_x39","_getProgramAccounts","_callee24","configOrCommitment","_extractCommitmentFro9","configWithoutEncoding","baseSchema","_callee24$","_context24","_excluded2","withContext","getProgramAccounts","_x40","_x41","_getParsedProgramAccounts","_callee25","_extractCommitmentFro10","_callee25$","_context25","getParsedProgramAccounts","_x42","_x43","_confirmTransaction","_callee26","strategy","rawSignature","_config$abortSignal","_config","decodedSignature","_callee26$","_context26","aborted","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","_x44","_x45","getCancellationPromise","signal","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","_callee27","_callee27$","_context27","getSignatureStatus","abortConfirmation","removeSignatureListener","_confirmTransactionUsingBlockHeightExceedanceStrategy","_callee30","_ref8$strategy","expiryPromise","_this$getTransactionC","cancellationPromise","outcome","_callee30$","_context30","checkBlockHeight","_callee28","_callee28$","_context28","_callee29","currentBlockHeight","_callee29$","_context29","BLOCKHEIGHT_EXCEEDED","race","_x46","_confirmTransactionUsingDurableNonceStrategy","_callee33","_ref11$strategy","_this$getTransactionC2","_signatureStatus","signatureStatus","_outcome$slotInWhichN","commitmentForStatus","_callee33$","_context34","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","_callee31","_yield$_this4$getNonc","_context31","_callee31$","_context32","getNonceAndContext","_callee32","_callee32$","_context33","NONCE_INVALID","slotInWhichNonceDidAdvance","_x47","_confirmTransactionUsingLegacyTimeoutStrategy","_callee34","_this5","timeoutId","_this$getTransactionC3","_callee34$","_context35","timeoutMs","TIMED_OUT","_x48","_getClusterNodes","_callee35","_callee35$","_context36","getClusterNodes","_getVoteAccounts","_callee36","_callee36$","_context37","getVoteAccounts","_x49","_getSlot","_callee37","_extractCommitmentFro11","_callee37$","_context38","_x50","_getSlotLeader","_callee38","_extractCommitmentFro12","_callee38$","_context39","getSlotLeader","_x51","_getSlotLeaders","_callee39","startSlot","_callee39$","_context40","getSlotLeaders","_x52","_x53","_getSignatureStatus","_callee40","_yield$this$getSignat","_callee40$","_context41","getSignatureStatuses","_x54","_x55","_getSignatureStatuses","_callee41","_callee41$","_context42","_x56","_x57","_getTransactionCount","_callee42","_extractCommitmentFro13","_callee42$","_context43","getTransactionCount","_x58","_getTotalSupply","_callee43","_callee43$","_context44","excludeNonCirculatingAccountsList","getTotalSupply","_x59","_getInflationGovernor","_callee44","_callee44$","_context45","getInflationGovernor","_x60","_getInflationReward","_callee45","_extractCommitmentFro14","_callee45$","_context46","getInflationReward","_x61","_x62","_x63","_getInflationRate","_callee46","_callee46$","_context47","getInflationRate","_getEpochInfo","_callee47","_extractCommitmentFro15","_callee47$","_context48","getEpochInfo","_x64","_getEpochSchedule","_callee48","epochSchedule","_callee48$","_context49","getEpochSchedule","_getLeaderSchedule","_callee49","_callee49$","_context50","getLeaderSchedule","_getMinimumBalanceForRentExemption","_callee50","_callee50$","_context51","_x65","_x66","_getRecentBlockhashAndContext","_callee51","_callee51$","_context52","getRecentBlockhashAndContext","_x67","_getRecentPerformanceSamples","_callee52","_callee52$","_context53","getRecentPerformanceSamples","_x68","_getFeeCalculatorForBlockhash","_callee53","_res$result","_callee53$","_context54","getFeeCalculatorForBlockhash","_x69","_x70","_getFeeForMessage","_callee54","wireMessage","_callee54$","_context55","_x71","_x72","_getRecentPrioritizationFees","_callee55","_config$lockedWritabl","_callee55$","_context56","lockedWritableAccounts","getRecentPrioritizationFees","_x73","_getRecentBlockhash","_callee56","_callee56$","_context57","getRecentBlockhash","_x74","_getLatestBlockhash","_callee57","_callee57$","_context58","getLatestBlockhashAndContext","getLatestBlockhash","_x75","_getLatestBlockhashAndContext","_callee58","_extractCommitmentFro16","_callee58$","_context59","_x76","_isBlockhashValid","_callee59","_extractCommitmentFro17","_callee59$","_context60","isBlockhashValid","_x77","_x78","_getVersion","_callee60","_callee60$","_context61","getVersion","_getGenesisHash","_callee61","_callee61$","_context62","getGenesisHash","_getBlock","_callee62","_extractCommitmentFro18","_res","_res2","_callee62$","_context63","_buildArgsAtLeastConfirmed","transactionDetails","t1","getBlock","_x79","_x80","_getParsedBlock","_callee63","_extractCommitmentFro19","_res3","_res4","_callee63$","_context64","getParsedBlock","_x81","_x82","_getBlockProduction","_callee64","extra","_callee64$","_context65","_excluded3","getBlockProduction","_x83","_getTransaction","_callee65","_extractCommitmentFro20","_callee65$","_context66","getTransaction","_x84","_x85","_getParsedTransaction","_callee66","_extractCommitmentFro21","_callee66$","_context67","getParsedTransaction","_x86","_x87","_getParsedTransactions","_callee67","_this6","_extractCommitmentFro22","_callee67$","_context68","getParsedTransactions","_x88","_x89","_getTransactions","_callee68","_this7","_extractCommitmentFro23","_callee68$","_context69","getTransactions","_x90","_x91","_getConfirmedBlock","_callee69","block","_callee69$","_context70","_ref17","getConfirmedBlock","_x92","_x93","_getBlocks","_callee70","endSlot","_callee70$","_context71","getBlocks","_x94","_x95","_x96","_getBlockSignatures","_callee71","_callee71$","_context72","getBlockSignatures","_x97","_x98","_getConfirmedBlockSignatures","_callee72","_callee72$","_context73","getConfirmedBlockSignatures","_x99","_x100","_getConfirmedTransaction","_callee73","_callee73$","_context74","getConfirmedTransaction","_x101","_x102","_getParsedConfirmedTransaction","_callee74","_callee74$","_context75","getParsedConfirmedTransaction","_x103","_x104","_getParsedConfirmedTransactions","_callee75","_this8","_callee75$","_context76","getParsedConfirmedTransactions","_x105","_x106","_getConfirmedSignaturesForAddress","_callee76","firstAvailableBlock","highestConfirmedRoot","_block","confirmedSignatureInfo","_callee76$","_context77","until","before","getConfirmedSignaturesForAddress2","getConfirmedSignaturesForAddress","_x107","_x108","_x109","_getConfirmedSignaturesForAddress2","_callee77","_callee77$","_context78","_x110","_x111","_x112","_getSignaturesForAddress","_callee78","_callee78$","_context79","getSignaturesForAddress","_x113","_x114","_x115","_getAddressLookupTable","_callee79","_yield$this$getAccoun","accountInfo","_callee79$","_context80","getAddressLookupTable","_x116","_x117","_getNonceAndContext","_callee80","_yield$this$getAccoun2","_callee80$","_context81","_x118","_x119","_getNonce","_callee81","_callee81$","_context82","getNonce","_x120","_x121","_requestAirdrop","_callee82","_callee82$","_context83","requestAirdrop","_x122","_x123","_blockhashWithExpiryBlockHeight2","_callee83","disableCache","timeSinceFetch","expired","_callee83$","_context84","_pollNewBlockhash","_blockhashWithExpiryBlockHeight","_x124","_pollNewBlockhash2","_callee84","startTime","cachedLatestBlockhash","cachedBlockhash","_callee84$","_context85","_getStakeMinimumDelegation","_callee85","_extractCommitmentFro24","_callee85$","_context86","getStakeMinimumDelegation","_x125","_simulateTransaction","_callee86","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","_wireTransaction","_encodedTransaction","_config2","_args87","_unsafeRes","_res5","originalTx","_signature","encodedTransaction","_logs","traceIndent","logTrace","_callee86$","_context87","sigVerify","simulateTransaction","_x126","_x127","_x128","_sendTransaction","_callee87","signersOrOptions","_wireTransaction2","_signature2","_callee87$","_context88","sendRawTransaction","_x129","_x130","_x131","_sendRawTransaction","_callee88","rawTransaction","_callee88$","_context89","sendEncodedTransaction","_x132","_x133","_sendEncodedTransaction","_callee89","_logs2","_callee89$","_context90","_x134","_x135","_this9","setInterval","_callee90","_callee90$","_context91","_updateSubscriptions","_this10","MAX_SAFE_INTEGER","clearInterval","_ref19","_ref20","_setSubscription","nextSubscription","_this$_subscriptionsB","prevState","stateChangeCallbacks","_unused2","clientSubscriptionId","_this$_subscriptionSt","_this11","_updateSubscriptions2","_callee94","_this12","activeWebSocketGeneration","isCurrentConnectionStillActive","_callee94$","_context95","_ref21","_callee93","_callee93$","_context94","callbacks","serverSubscriptionId","_callee91","_serverSubscriptionId","_callee91$","_context92","_callee92","unsubscribeMethod","_callee92$","_context93","_x136","_handleServerNotification","callbackArgs","_create","_makeSubscription","subscriptionConfig","_this13","existingSubscription","_callee95","_callee95$","_context96","onAccountChange","_removeAccountChangeListener","_callee96","_callee96$","_context97","_unsubscribeClientSubscription","removeAccountChangeListener","_x137","_create2","accountId","onProgramAccountChange","filters","_removeProgramAccountChangeListener","_callee97","_callee97$","_context98","removeProgramAccountChangeListener","_x138","onLogs","mentions","_removeOnLogsListener","_callee98","_callee98$","_context99","removeOnLogsListener","_x139","_create3","_create4","onSlotChange","_removeSlotChangeListener","_callee99","_callee99$","_context100","removeSlotChangeListener","_x140","_create5","onSlotUpdate","_removeSlotUpdateListener","_callee100","_callee100$","_context101","removeSlotUpdateListener","_x141","_unsubscribeClientSubscription2","_callee101","subscriptionName","dispose","_callee101$","_context102","_x142","_x143","override","_create6","_this14","_err","onSignatureWithOptions","_this15","_options$commitment","_excluded4","_removeSignatureListener","_callee102","_callee102$","_context103","_x144","_create7","onRootChange","_removeRootChangeListener","_callee103","_callee103$","_context104","removeRootChangeListener","_x145","Keypair","keypair","_keypair","generate","fromSecretKey","skipValidation","computedPublicKey","ii","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","decodeCreateLookupTable","checkKeysLength","recentSlot","decodeExtendLookupTable","decodeCloseLookupTable","recipient","decodeFreezeLookupTable","decodeDeactivateLookupTable","AddressLookupTableProgram","createLookupTable","_PublicKey$findProgra","_PublicKey$findProgra2","lookupTableAddress","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","decodeRequestUnits","RequestUnits","additionalFee","decodeRequestHeapFrame","RequestHeapFrame","decodeSetComputeUnitLimit","SetComputeUnitLimit","decodeSetComputeUnitPrice","SetComputeUnitPrice","microLamports","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","PRIVATE_KEY_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","u64$1","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","writeInto","bufferOut","xofInto","xof","keccak_256","genShake","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","b2n","h2b","ut","DER","Err","DERErr","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","rhl","rl","weierstrassPoints","isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","ut.bytesToNumberBE","mod.mod","assertPrjPoint","px","py","pz","hasEvenY","U1","U2","t3","t4","t5","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","_bits","ProjectivePoint","hmac","bits2int","bits2int_modN","lowS","weierstrass","compressedLen","uncompressedLen","isValidFieldElement","invN","mod.invert","cat","isYOdd","isHeadOdd","numToNByteStr","ut.numberToBytesBE","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","hasHighS","toDERRawBytes","ut.hexToBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","rand","mod.hashToPrivateScalar","fromPrivateKey","isProbPub","privateA","publicB","ORDER_MASK","ut.bitMask","int2octets","prepSig","defaultSigOpts","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","drbg","ut.createHmacDrbg","sg","_sig","fromDER","derError","fromCompact","SWUFpSqrtRatio","c2","c3","c4","c5","c6","c7","sqrtRatio","tv5","tv4","isQR","tvv5","mapToCurveSimpleSWU","mod.validateField","tv6","HMAC","iHash","oHash","getHash","createCurve","defHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","secp256k1","POW_2_128","fe","TAGGED_HASH_PREFIXES","taggedHash","messages","tagP","tagH","pointToBytes","numTo32b","GmulAdd","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrGetPublicKey","schnorrSign","auxRand","k_","rx","schnorrVerify","pub","isoMap","htf.isogenyMap","mapSWU","ecdsaSign","publicKeyCreate","ETHEREUM_ADDRESS_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","_params$instructionIn","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","_ecdsaSign","_ecdsaSign2","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","decodeInitialize","Initialize","stakePubkey","decodeDelegate","Delegate","decodeAuthorize","Authorize","newAuthorized","stakeAuthorizationType","custodianPubkey","decodeAuthorizeWithSeed","AuthorizeWithSeed","authoritySeed","authorityOwner","authorityBase","decodeSplit","Split","splitStakePubkey","decodeMerge","Merge","sourceStakePubKey","decodeWithdraw","Withdraw","decodeDeactivate","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","initialize","maybeLockup","authorize","authorizeWithSeed","splitInstruction","splitWithSeed","merge","withdraw","deactivate","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","decodeInitializeAccount","InitializeAccount","voteAuthorizationType","_decodeData3$voteAuth","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","fromConfigData","configKeyCount","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","_sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,27,32,53,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,105,106,107,108,109,110,111]}